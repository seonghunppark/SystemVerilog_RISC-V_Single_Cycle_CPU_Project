// instruction code [32bit]
// |imm[7bit]|rs2[5bit]|rs1[5bit]|funct3[3bit]|imm[5bit]|opcode[7bit|]
// rs2 = x5, rs1 = x3, imm = 8
// 여기서 조심해야하는 게 pc counter를 
// 4씩 커지게 했기 때문에 4의 배수로 가야한다


// 1. BEQ : branch ==
// rs1과 rs2가 같다면(==) 다음 pc값을 현재 pc값 + imm으로 해라
// Expected result : rs1(x5) == rs2(x5) -> next pc = pc + 8(2칸) 
0000000_00011_00011_000_01000_1100011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011

// 2. BNE : branch !=
// rs1과 rs2가 같지않다면(!=) 다음 pc값을 현재 pc값 + imm으로 해라
// Expected result : rs1(x3) != rs2(x5) -> next pc = pc + 8(2칸)
0000000_00101_00011_001_01000_1100011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011


// 3. BLT : branch <
// rs1 < rs2라면  다음 pc값을 현재 pc값 + imm으로 해라
// Expected result : rs1(x5: 음수) < rs2(x3 : 양수) -> next pc = pc + 8(2칸)
0000000_00011_00101_100_01000_1100011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011


// 4. BGE : branch >=
// rs1 >= rs2라면 다음 pc값을 현재 pc값 + imm으로 해라
// Expected result : rs1(x3 : 양수) >= rs2(x5 : 음수) -> next pc = pc + 8(2칸)
0000000_00101_00011_101_01000_1100011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011


// 5. BLTU : branch < (U)
// unsigned(rs1 = x3 : 양수) < unsigned(rs2 = x5 : 음수)라면 다음 pc값을 현재 pc값 + imm으로 해라
0000000_00101_00011_110_01000_1100011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011

// 6. BGEU : branch >= (U)
// unsigned(rs1 : x5 음수) >= unsigned(rs2 : x3 양수)라면 다음 pc값을 현재 pc값 + imm으로 해라
0000000_00011_00101_111_01000_1100011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011


// instruction code [32bit]
// |imm[20bit]|rd[5bit]|opcode[7bit]
// imm = 12, rd = x6

// 1. Jal
// imm = 12, rd = x6
// Expected result : rd(x6) = pc + 4, next pc = current pc + 12
00000000110000000000_00110_1101111

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011


// 2. jalr
// imm = 16, rd = x6, rs1 = x10
// Expected result : rd(x6) = pc + 4, next pc = x4 + 16
0000_0100_0000_00000_000_00110_1100111

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011

// 중간 뛰어넘을 명령어
0000_0000_1010_00101_000_00011_0010011




